@page
@using Simulator
@model IndexModel
@{
    ViewData["Title"] = "Orc vs Elf";
}

<div class="control-panel">
    <form asp-page="/Index" method="post">
        <!-- Przycisk do przejścia do poprzedniej tury -->
        <button type="submit" asp-page-handler="PrevTurn"><</button>
    </form>
    <form asp-page="/Index" method="post">
        <!-- Przycisk do przejścia do następnej tury -->
        <button type="submit" asp-page-handler="NextTurn">></button>
    </form>
    <h1> Tour: @Model.Turn</h1>
</div>

<div class="control-panel">
    @{
        if (Model.Turn != 0)
        {
            // Wyświetlenie logu dla obecnej tury
            var log = $"{Model.CurrentLog.Mappable}";
            //goes { Model.CurrentLog.Move}
            //<p>It's' power: @Model.simhistory.TurnLogs[Model.Turn].Power</p>
            <p>@log</p>
        }
    }
</div>

<div class="container">
    <div class="map-container" style="grid-template-columns: repeat(@Model.SizeX, 1fr); grid-template-rows: repeat(@Model.SizeY, 1fr);">

        @for (int row = 0; row < Model.SizeY; row++)
        {
            for (int col = 0; col < Model.SizeX; col++)
            {
                var path = "";
                var cords = new Point(col, row);
                if (Model.CurrentLog.Symbols.ContainsKey(cords))
                {
                    // Wybór ścieżki obrazka na podstawie symbolu
                    if (Model.CurrentLog.Symbols[cords] == 'B')
                    {
                        @* if (punkt[cords] z symboli == punkt[cords] z ActionPoints) to AB (action bird), else to co nizej *@
                        path = $"creatures/BB.jpg";
                    }
                    else if (Model.CurrentLog.Symbols[cords] == 'X')
                    {
                        path = $"creatures/X.jpg";
                    }
                    else
                    {
                        path = $"creatures/{Model.CurrentLog.Symbols[cords]}.jpg";
                    }


                    // Wyświetlenie obrazka w odpowiedniej komórce

                    <div class="grid-item">
                        <span class="power-value">P: @Model.CurrentLog.Powers[cords]</span>
                        <img src="@path" alt="@Model.CurrentLog.Symbols[cords]" />
                    </div>
                }
                else if (Model.CurrentLog.ActionPoints.ContainsKey(cords))
                {
                    if (Model.CurrentLog.ActionPoints[cords] == "AA")
                    {
                        path = $"creatures/AA.jpg";
                    }

                    // Wyświetlenie obrazka w odpowiedniej komórce

                    <div class="grid-item">
                        <img src="@path" alt="@Model.CurrentLog.ActionPoints[cords]" />
                    </div>

                }
                
                    //<div class="grid-item">
                      //  <img src="@pathAction" alt="@Model.CurrentLog.ActionPoints[cords]" />
                    //</div>
                else if (Model.CurrentLog.DragonLog.Item1.Equals(cords))
                //Model.CurrentLog.DragonLog.Item1.X == cords.X && Model.CurrentLog.DragonLog.Item1.Y == cords.Y *@
                {
                    path = $"creatures/D.jpg";
                    <div class="grid-item">
                        <img src="@path" alt="dragon" />
                        <span class="power-value">P: @Model.CurrentLog.DragonLog.Item2</span>
                    </div>
                } 
                else
                {
                    // Pusta komórka mapy
                    <div class="grid-item"></div>
                }
            }
        }
    </div>
</div>
